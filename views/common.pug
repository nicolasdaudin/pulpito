extends base

block content 

  include _search-form-template
    
  
  
  //  Flight Search Areas 
  section#explore_area.section_padding
    .container
      //  Section Heading 
      .row
        .col-lg-12.col-md-12.col-sm-12.col-12
          .section_heading_center
            h2=`${results} destinations trouvées`
      if (data)
        .row
          .col-lg-3
            .left_side_search_area
              .left_side_search_boxed
                .left_side_search_heading
                  h5 Filtrer par prix par personne
                .filter-price
                  #price-slider(data-min-possible-price=filters ? filters.minPossiblePrice: 0,data-max-possible-price=filters ? filters.maxPossiblePrice: 2000,data-price-from=filters ? (filters.priceFrom ? filters.priceFrom : filters.minPossiblePrice ) : 0,data-price-to=filters ? (filters.priceTo ? filters.priceTo : filters.maxPossiblePrice ) : 2000)
                button.apply.apply_search_filters(type='button') Appliquer
              .left_side_search_boxed
                .left_side_search_heading
                  h5 Escales
                .tour_search_type.btn_radio_max_connections
                  .form-check
                    input.form-check-input#flexCheckDefaultf1(name='maxConnections' type='radio' value=0 checked=filters.maxConnections==='0')
                    label.form-check-label(for='flexCheckDefaultf1')
                      span.area_flex_one
                        span Direct (Sans escale)
                        span 
                  .form-check
                    input.form-check-input#flexCheckDefaultf2(name='maxConnections' type='radio' value=1 checked=filters.maxConnections==='1')
                    label.form-check-label(for='flexCheckDefaultf2')
                      span.area_flex_one
                        span Jusque 1 escale
                        span 
                  .form-check
                    input.form-check-input#flexCheckDefaultf2(name='maxConnections' type='radio' value=2 checked=!filters.maxConnections || filters.maxConnections==='2')
                    label.form-check-label(for='flexCheckDefaultf3')
                      span.area_flex_one
                        span Tous les vols
                        span 
                  
          .col-lg-9
            .row
              .col-lg-12
                if (navigation)
                  .filter_results                    
                    .pagination_results 
                      if (navigation.previous)
                        a.btn_navigation.btn_previous(type='button' href=`${navigation.previous}`) < Précédent
                      if (navigation.next)
                        a.btn_navigation.btn_next(type='button' href=`${navigation.next}`) Suivant >
                    .sort_results(data-sort=navigation.sort) Trier par :
                      if (navigation.sort === 'price')
                        span Prix total
                        a.btn_navigation.btn_sort-by-distance(type='button' href=`${navigation.sortByDistance}`) Distance totale
                      if (navigation.sort === 'distance') 
                        a.btn_navigation.btn_sort-by-price(type='button' href=`${navigation.sortByPrice}`) Prix total
                        span Distance totale
                      
                .flight_search_result_wrapper
                  each itinerary,i in data  
                    - var index = i + 1 
                    //- .flight_search_item_wrappper(data-bs-toggle='collapse' data-bs-target=`#collapseExample${index}` aria-expanded='false' aria-controls=`#collapseExample${index}`)
                    .flight_search_item_wrappper
                      .flight_search_items
                        .multi_city_flight_lists
                          .flight_multis_area_wrapper
                            .flight_search_left
                              .flight_search_destination
                                p Destination:
                                h3=`${itinerary.cityTo} (${itinerary.cityCodeTo})`
                                h6=itinerary.countryTo
                        .flight_search_right
                          - var links = [];
                          each flight in itinerary.flights 
                            - links.push(flight.deep_link)
                          .numbers 
                            h2=`${itinerary.price} €`
                            h4=`(${itinerary.distance} km)`                       
                          a.btn.btn_theme.btn_sm.btn_book_all(data-links=links) Réserver tous les vols ↗️
                          h6(data-bs-toggle='collapse' data-bs-target=`#collapseExample${index}` aria-expanded='false' aria-controls=`#collapseExample${index}`)
                            | Détails 
                            i.fas.fa-chevron-down
                      .flight_policy_refund.collapse(id=`collapseExample${index}`)
                        .flight_show_down_wrapper_header
                          .airline-details Depuis
                          .flight_inner_show_component_container
                            .flight_inner_show_component Aller
                            .flight_inner_show_component Retour
                          .TabPanelInner Prix
                        each flight in itinerary.flights
                          .flight_show_down_wrapper
                            .airline-details
                              h3=`${flight.cityFrom}`
                            - var onewayConnections = (flight.route.oneway.connections.length > 0) ? flight.route.oneway.connections : null
                          
                            .flight_inner_show_component_container 
                              .flight_inner_show_component
                                .flight_det_wrapper
                                  .flight_det
                                    .code_time
                                      span.code=flight.flyFrom
                                      span.time=`${flight.route.oneway.local_departure.split(',')[1].trim()}`
                                    p.airport=`${flight.cityFrom}`

                                    p.date=`${flight.route.oneway.local_departure.split(',')[0].trim()}`
                                .flight_duration
                                  .arrow_right
                                  if flight.route.oneway.connections.length > 0
                                    span=flight.route.oneway.connections
                                  p=flight.route.oneway.duration
                                .flight_det_wrapper
                                  .flight_det
                                    .code_time
                                      span.code=flight.flyTo
                                      span.time=`${flight.route.oneway.local_arrival.split(',')[1].trim()}`
                                    p.airport=`${flight.cityTo}`

                                    p.date=`${flight.route.oneway.local_arrival.split(',')[0].trim()}`
                              .flight_inner_show_component
                                .flight_det_wrapper
                                  .flight_det
                                    .code_time
                                      span.code=flight.flyTo
                                      span.time=`${flight.route.return.local_departure.split(',')[1].trim()}`
                                    p.airport=`${flight.cityTo}`

                                    p.date=`${flight.route.return.local_departure.split(',')[0].trim()}`
                                .flight_duration
                                  .arrow_left
                                  if flight.route.return.connections.length > 0
                                    span=flight.route.return.connections
                                  p=flight.route.return.duration
                                .flight_det_wrapper
                                  .flight_det
                                    .code_time
                                      span.code=flight.flyFrom
                                      span.time=`${flight.route.return.local_arrival.split(',')[1].trim()}`
                                    p.airport=`${flight.cityFrom}`

                                    p.date=`${flight.route.return.local_arrival.split(',')[0].trim()}`
                            .TabPanelInner
                              .flight_info_taable
                                h3=`${flight.fare.adults} € / pers.`
                                p=`(${flight.distance} km / pers.)`
                                a.btn.btn_theme.btn_sm.btn_book(target='_blank',href=`${flight.deep_link}`)=`Réserver ce vol (${flight.price} €) ↗️`
                if (navigation)
                  .filter_results                    
                    .pagination_results 
                      if (navigation.previous)
                        a.btn_navigation.btn_previous(type='button' href=`${navigation.previous}`) < Précédent
                      if (navigation.next)
                        a.btn_navigation.btn_next(type='button' href=`${navigation.next}`) Suivant >
                    .sort_results(data-sort=navigation.sort) Trier par :
                      if (navigation.sort === 'price')
                        span Prix total
                        a.btn_navigation.btn_sort-by-distance(type='button' href=`${navigation.sortByDistance}`) Distance totale
                      if (navigation.sort === 'distance') 
                        a.btn_navigation.btn_sort-by-price(type='button' href=`${navigation.sortByPrice}`) Prix total
                        span Distance totale



  script(src="assets/js/axios.min.js")
  script(src='assets/js/pulpito-autocomplete.js')                     
                      
            